@import '~@angular/material/theming';

// Define a custom mixin that takes in the current material theme and colors
@mixin theme-setup($theme, $colors) {
  // Include angular material theme
  @include angular-material-theme($theme);
  $background: map-get($theme, background);
  $foreground: map-get($theme, foreground);

  // Create theme-specific styles
  color: map-get($foreground, text);

  // Define a custom typography config
  $custom-typography: mat-typography-config(
    $body-1: mat-typography-level(16px, 22px, 400),
    $body-2: mat-typography-level(16px, 22px, 500),
    $caption: mat-typography-level(13px, 20px, 400),
    $subheading-1: mat-typography-level(17px, 24px, 400),
    $subheading-2: mat-typography-level(17px, 24px, 500),
    $headline: mat-typography-level(24px, 32px, 500)
  );

  // Override specific Material typography levels
  .mat-caption, .mat-small {
    @include mat-typography-level-to-styles($custom-typography, caption);
  }

  &.mat-typography, .mat-body, .mat-body-1 {
    @include mat-typography-level-to-styles($custom-typography, body-1);
  }

  .mat-body-2 {
    @include mat-typography-level-to-styles($custom-typography, body-2);
  }

  h4, .mat-subheading-1 {
    @include mat-typography-level-to-styles($custom-typography, subheading-1);
  }

  h3, .mat-subheading-2 {
    @include mat-typography-level-to-styles($custom-typography, subheading-2);
  }

  h1, .mat-headline {
    @include mat-typography-level-to-styles($custom-typography, headline);
  }

  a {
    &:not(.mat-button):not(.mat-raised-button):not(.mat-menu-item):not(.mat-flat-button):not(.mat-stroked-button):not(.mat-icon-button):not(.mat-tab-link) {
      color: map-get($colors, primary);

      // Set classes for each named color in the $colors map
      @each $key, $value in $colors {
        &.#{$key} {
          color: $value;
        }
      }
    }
  }

  a.active {
    color: map-get($colors, primary);
  }

  h1, h2, .mat-display-1, .mat-display-2, .mat-display-3, .mat-display-4 {
    font-family: Raleway, sans-serif;
  }

  h1 {
    .mat-icon {
      @include mat-icon-size(mat-font-size($config, headline));
    }
  }

  h2 {
    .mat-icon {
      @include mat-icon-size(mat-font-size($config, title));
    }
  }

  .mat-display-1 {
    margin-bottom: 36px;

    .mat-icon {
      @include mat-icon-size(mat-font-size($config, display-1));
    }
  }

  .mat-display-2 {
    margin-bottom: 40px;

    .mat-icon {
      @include mat-icon-size(mat-font-size($config, display-2));
    }
  }

  form {
    h1, h2, h3 {
      font-weight: 500;
    }
  }

  .app-background {
    background-color: map-get($colors, app-bg);
  }

  .content-block, .info-block, .notice {
    background-color: map-get($colors, notice-bg);
  }

  .content-block__title {
    border-color: map-get($background, focused-button);
  }

  .cta__headline {
    border-color: map-get($colors, notice-bg);
  }

  .cta__wrap, .blurb {
    background-color: map-get($background, card);
  }

  .can-highlight {
    transition: 1s background-color;
  }

  .mat-button, .mat-raised-button, .mat-flat-button, .mat-stroked-button {
    min-width: 0;
  }

  .mat-raised-button, .mat-fab, .mat-mini-fab {
    &:not(.mat-icon-button) {
      &:not([class*=mat-elevation-z]) {
        @include mat-elevation(3);
      }
    }

    &[disabled] {
      box-shadow: none;
    }
  }

  .mat-flat-button, .mat-raised-button, .mat-fab, .mat-mini-fab {
    &.mat-secondary-text {
      background-color: map-get($colors, secondary-text);
      color: white;
    }

    &.mat-success {
      background-color: map-get($colors, success);
      color: map-get($colors, success-contrast);
    }

    &.mat-info {
      background-color: map-get($colors, info);
      color: map-get($colors, info-contrast);
    }
  }

  .mat-card-actions {
    margin-left: 0;
    margin-right: 0;
  }

  .mat-dialog-content--scroll {
    background-color: map-get($colors, notice-bg);
    border-bottom: 1px solid;
    border-top: 1px solid;
    border-color: map_get($background, background);
  }

  .mat-dialog-actions {
    padding: 16px 0 0;
    margin-bottom: 0;
  }

  .mat-expansion-panel-header {
    font-weight: 500;
  }

  .mat-form-field {
    font-size: 14px;
  }

  .mat-menu-item {
    &.active {
      background-color: map-get($background, hover);

      .mat-icon {
        color: map-get($colors, primary);
      }
    }
  }

  .mat-tab-label-active {
    opacity: 0;
  }

  .mat-form-field-prefix, .mat-form-field-suffix {
    color: map-get($foreground, secondary-text);
  }

  td {
    &.mat-cell, &.mat-footer-cell, &.mat-header-cell {
      padding: 4px 8px 4px 0;
    }
  }

  // Set classes for each named color in the $colors map
  @each $key, $value in $colors {
    .#{$key} {
      color: $value;
    }

    .#{$key}-bg {
      background-color: $value;
    }
  }
}

// Set Angular Material icon size
@mixin mat-icon-size($size: 24px) {
  font-size: $size;
  height: $size;
  width: $size;
  line-height: $size;
}

// Set Angular Material icon button size (use mat-icon size as the $size parameter)
@mixin mat-icon-button-size($size: 24px) {
  $button-size: ($size*1) + 16px;

  height: $button-size;
  width: $button-size;
  line-height: $button-size;

  .mat-icon {
    font-size: $size;
    height: $size;
    width: $size;
    line-height: $size;
  }
}
